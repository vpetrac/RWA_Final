@model RWA_FinalProject.Models.Proizvod

@{
    ViewBag.Title = "Edit";
    var potkategorije = ViewBag.potkategorije as IEnumerable<RWA_FinalProject.Models.Potkategorija>;
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Proizvod</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IDProizvod)

    <div class="form-group">
        @Html.LabelFor(model => model.Naziv, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Naziv, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Naziv, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BrojProizvoda, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BrojProizvoda, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BrojProizvoda, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Boja, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Boja, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Boja, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MinimalnaKolicinaNaSkladistu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MinimalnaKolicinaNaSkladistu, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MinimalnaKolicinaNaSkladistu, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CijenaBezPDV, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CijenaBezPDV, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CijenaBezPDV, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PodkategorijaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PodkategorijaId, selectList: new SelectList(items: potkategorije, dataTextField: "Naziv", dataValueField: "IdPotkategorija"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PodkategorijaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<p id="info" style="color:red;margin:20px auto;"></p>

<div>
    @Html.ActionLink("Back to List", "Index")
    <a href="~/Views/Potkategorije/Edit.cshtml">~/Views/Potkategorije/Edit.cshtml</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('form').submit(function (e) {
            e.preventDefault();

            if ($(e.target).valid()) {
                console.log($(e.target).serializeArray());

                const params = $(e.target).serializeArray();
                const proizvod = {};

                for (item of params) {
                    proizvod[item.name] = item.value
                }
                console.log('proizvod', proizvod);

                $.ajax({
                    url: '@Url.Action(controllerName: "Proizvodi", actionName: "Edit")',
                    data: proizvod,
                    method: 'post',
                    statusCode: {
                        200: function () {
                            $('p#info').html('Podaci uspješno ažurirani.');
                            $('p#info').css('color', 'green');
                            setTimeout(function () {
                                window.location = "/";
                            }, 2000);
                        },
                        400: function () {
                            $('p#info').html('Podaci nisu ažurirani.');
                            $('p#info').css('color', 'red');
                        }
                    }
                })
            }
        })
    </script>
}

